<?xml version="1.0" encoding="UTF-8"?>
<!---->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.norman.dao.IUserDao">
    <!--配置查询所有-->
    <select id="findAll" resultType="com.norman.domain.User">
        select * from user
    </select>

    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="com.norman.domain.User">
        <!-- 配置插入操作后，获取插入数据的id -->
        <!-- 新增用户后，同时还要返回当前新增用户的 id 值，因为 id 是由数据库的自动增长来实现的，所以就相 当于我们要在新增后将自动增长 auto_increment 的值返回。 -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{username},#{address},#{sex},#{birthday});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.norman.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <!-- 删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{id}
    </delete>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="INT" resultType="com.norman.domain.User">
        select * from user where id = #{id}
    </select>


    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="string" resultType="com.norman.domain.User">
        select * from user where username like #{name}
        <!-- select * from user where username like '%${value}%'-->
    </select>

    <!-- 获取用户的总记录条数 -->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!-- 根据queryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.norman.domain.QueryVo" resultType="com.norman.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>